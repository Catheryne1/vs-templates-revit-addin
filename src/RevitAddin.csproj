<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net40;net45;net451;net452;net46;net47</TargetFrameworks>
    <!-- Forcibly set platform to 'x64' and ignore architecture-related problems -->
    <PlatformTarget>x64</PlatformTarget>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
  
    <!-- Force the project to use the legacy debugger engine -->
    <DebugEngines>{351668CC-8477-4fbf-BFE3-5F1006E4DB1F}</DebugEngines>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net40' ">
    <RevitVersion>2014</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <RevitVersion>2015</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net451' ">
    <RevitVersion>2016</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net452' ">
    <RevitVersion>2017</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net46' ">
    <RevitVersion>2018</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net47' ">
    <RevitVersion>2019</RevitVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DebugType>full</DebugType>
  </PropertyGroup>
    
  <PropertyGroup>
    <!-- Define handy symbols to use in the code in order to accommodate different Revit versions,
    e.g. by wrapping legacy / deprecated API calls with #if REVIT2014 | REVIT2015 -->
    <DefineConstants>REVIT$(RevitVersion)</DefineConstants>
    
    <!-- Multiple targets can cause obj folder locking by concurrent builds -->
    <BuildInParallel>false</BuildInParallel>
    
    <!-- Override 'OutputPath' to Debug/Release + Revit version -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <OutputPath>..\bin\$(Configuration)\$(RevitVersion)</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Revit2014x64-SDK" Version="1.1.0" Condition=" '$(RevitVersion)' == '2014' " />
    <PackageReference Include="Revit.RevitApi.x64" Version="2015.0.0" Condition=" '$(RevitVersion)' == '2015' " />
    <PackageReference Include="Revit.RevitApiUI.x64" Version="2015.0.0" Condition=" '$(RevitVersion)' == '2015' " />
    <PackageReference Include="Revit.RevitApi.x64" Version="2016.0.0" Condition=" '$(RevitVersion)' == '2016' " />
    <PackageReference Include="Revit.RevitApiUI.x64" Version="2016.0.0" Condition=" '$(RevitVersion)' == '2016' " />
    <PackageReference Include="Revit.RevitApi.x64" Version="2017.0.0" Condition=" '$(RevitVersion)' == '2017' " />
    <PackageReference Include="Revit.RevitApiUI.x64" Version="2017.0.0" Condition=" '$(RevitVersion)' == '2017' " />
    <PackageReference Include="Revit.RevitApi.x64" Version="2018.0.0" Condition=" '$(RevitVersion)' == '2018' " />
    <PackageReference Include="Revit.RevitApiUI.x64" Version="2018.0.0" Condition=" '$(RevitVersion)' == '2018' " />
    <PackageReference Include="Revit.RevitApi.x64" Version="2019.0.0" Condition=" '$(RevitVersion)' == '2019' " />
    <PackageReference Include="Revit.RevitApiUI.x64" Version="2019.0.0" Condition=" '$(RevitVersion)' == '2019' " />
  </ItemGroup>

  <ItemGroup>
    <!-- Not sure why, but ASoft .NET Version Detector's reports
    keep bloating the project, so the rule below get's rid of them  -->
    <None Remove="--version*" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="PresentationFramework" />
  </ItemGroup>

  <ItemGroup>
    <None Update="RevitAddin.addin">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <Target Name="PreventRevitSDKCopyLocal" AfterTargets="ResolveReferences">
    <ItemGroup>
      <!-- A temporary fix for Revit SDK files being copied to the output folder -->
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="'%(ReferenceCopyLocalPaths.NuGetPackageId)' == 'Revit2014x64-SDK' Or '%(ReferenceCopyLocalPaths.NuGetPackageId)' == 'Revit.RevitApi.x64' Or '%(ReferenceCopyLocalPaths.NuGetPackageId)' == 'Revit.RevitApiUI.x64'" />
    </ItemGroup>
  </Target>

  <Target Name="CopyAddinsToAppData" AfterTargets="AfterBuild">
    <!-- Copy newly compiled add-in files to AppData folder (before starting the debugger) -->
    <ItemGroup>
      <AddinFiles Include="..\bin\$(Configuration)\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(AddinFiles)" DestinationFolder="$(AppData)\Autodesk\Revit\Addins\%(RecursiveDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
  </Target>
  
  <Target Name="CleanAddinsInAppData" AfterTargets="AfterClean">
    <!-- Delete previously deployed to AppData folder add-in files -->
    <ItemGroup>
      <AddinFiles Include="$(AppData)\Autodesk\Revit\Addins\**\$(AssemblyName).*" />
    </ItemGroup>
    <Delete Files="@(AddinFiles)" />
  </Target>

</Project>
